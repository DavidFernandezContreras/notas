@model YourApp.Models.TableViewModel
@using System.Globalization

@{
    ViewData["Title"] = "Aplicaciones desplegadas";
    var culturespan = CultureInfo.GetCultureInfo("es-ES");
    string fmt(DateTimeOffset? dt) => dt.HasValue ? dt.Value.ToLocalTime().ToString("yyyy-MM-dd HH:mm", culturespan) : "N/A";
    string ver(string? v) => string.IsNullOrWhiteSpace(v) ? "—" : v!;
}

<h2>@ViewData["Title"]</h2>

<style>
    table.deploy-table { border-collapse: collapse; width: 100%; }
    .deploy-table th, .deploy-table td { border: 1px solid #ddd; padding: .5rem; vertical-align: top; }
    .deploy-table th { background: #f5f5f5; text-align: left; }
    .cell-app { font-size: .95rem; line-height: 1.3; white-space: nowrap; }
    .asm-line { margin: 0 0 .25rem 0; }
    .asm-name { font-weight: 600; }
    .asm-meta { font-size: .85rem; color: #555; }
    .not-found { color: #999; font-style: italic; }
    .env-head { text-transform: uppercase; }
</style>

<table class="deploy-table">
    <thead>
        <tr>
            <th>Aplicación</th>
            @foreach (var env in Model.Environments)
            {
                <th class="env-head">@env</th>
            }
        </tr>
    </thead>
    <tbody>
    @foreach (var app in Model.Applications)
    {
        <tr>
            <td><strong>@app</strong></td>
            @foreach (var env in Model.Environments)
            {
                var cell = Model.Cells.TryGetValue(app, out var envMap) && envMap.TryGetValue(env, out var c) ? c : null;
                <td class="cell-app">
                    @if (cell == null)
                    {
                        <div class="not-found">Sin datos</div>
                    }
                    else
                    {
                        // ESPECÍFICO (principal)
                        if (cell.Specific?.FoundPath == null)
                        {
                            <div class="asm-line not-found">
                                <span class="asm-name">Main:</span> N/A
                            </div>
                        }
                        else
                        {
                            <div class="asm-line">
                                <span class="asm-name">Main:</span>
                                <span class="asm-meta">
                                    Fecha: @fmt(cell.Specific.Created)
                                    &nbsp;·&nbsp; Ver: @ver(cell.Specific.Version)
                                </span>
                            </div>
                        }

                        // GENERALES (en orden de configuración)
                        foreach (var genName in Model.GeneralAssemblies)
                        {
                            var g = cell.Generals.FirstOrDefault(x => string.Equals(x.AssemblyName, genName, StringComparison.OrdinalIgnoreCase));
                            if (g == null || g.FoundPath == null)
                            {
                                <div class="asm-line not-found">
                                    <span class="asm-name">@genName:</span> N/A
                                </div>
                            }
                            else
                            {
                                <div class="asm-line">
                                    <span class="asm-name">@genName:</span>
                                    <span class="asm-meta">
                                        Fecha: @fmt(g.Created)
                                        &nbsp;·&nbsp; Ver: @ver(g.Version)
                                    </span>
                                </div>
                            }
                        }
                    }
                </td>
            }
        </tr>
    }
    </tbody>
</table>